{
  "Resources": {
    "GetMessagesHandlerServiceRole21FD5B23": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/GetMessagesHandler/ServiceRole/Resource"
      }
    },
    "GetMessagesHandlerF61D6CE8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-hnb659fds-assets-815673034358-us-east-2",
          "S3Key": "0a7b3f7bfa91e61098c9b221398132596475d5f9bf6eff647e552b96c7795e4c.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "GetMessagesHandlerServiceRole21FD5B23",
            "Arn"
          ]
        },
        "Handler": "get-messages.handler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "GetMessagesHandlerServiceRole21FD5B23"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/GetMessagesHandler/Resource",
        "aws:asset:path": "/Users/arturorodriguez/Documents/Enroute Projects/Quil/TestProject/source/messages-alerts-api/lambdas",
        "aws:asset:property": "Code"
      }
    },
    "apiC8550315": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "messages-alerts-api"
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/Resource"
      }
    },
    "apiCloudWatchRoleAC81D93E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/CloudWatchRole/Resource"
      }
    },
    "apiAccount57E28B43": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apiCloudWatchRoleAC81D93E",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apiC8550315"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/Account"
      }
    },
    "apiDeployment149F12940724e28f13d08f97c6ede92774bca646": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apimessagesGET80153A2D",
        "apimessages69C8064A"
      ],
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/Deployment/Resource"
      }
    },
    "apiDeploymentStageprod896C8101": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "DeploymentId": {
          "Ref": "apiDeployment149F12940724e28f13d08f97c6ede92774bca646"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/DeploymentStage.prod/Resource"
      }
    },
    "apimessages69C8064A": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apiC8550315",
            "RootResourceId"
          ]
        },
        "PathPart": "messages",
        "RestApiId": {
          "Ref": "apiC8550315"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/Default/messages/Resource"
      }
    },
    "apimessagesGETApiPermissionApiPipelineStacktestMessagesAlertsApiStackapi2FDA86A7GETmessages0B5BDAEB": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetMessagesHandlerF61D6CE8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:815673034358:",
              {
                "Ref": "apiC8550315"
              },
              "/",
              {
                "Ref": "apiDeploymentStageprod896C8101"
              },
              "/GET/messages"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/Default/messages/GET/ApiPermission.ApiPipelineStacktestMessagesAlertsApiStackapi2FDA86A7.GET..messages"
      }
    },
    "apimessagesGETApiPermissionTestApiPipelineStacktestMessagesAlertsApiStackapi2FDA86A7GETmessagesE6F377E0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "GetMessagesHandlerF61D6CE8",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:815673034358:",
              {
                "Ref": "apiC8550315"
              },
              "/test-invoke-stage/GET/messages"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/Default/messages/GET/ApiPermission.Test.ApiPipelineStacktestMessagesAlertsApiStackapi2FDA86A7.GET..messages"
      }
    },
    "apimessagesGET80153A2D": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apimessages69C8064A"
        },
        "RestApiId": {
          "Ref": "apiC8550315"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetMessagesHandlerF61D6CE8",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/api/Default/messages/GET/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/02PwU7DMBBEv6V3Z0soQuJG2opbBQpfYJwluIntyLumqiL/O7ZDpJz2zcqema2hfnyBh92rvFGlumE/K+cR5k+WahANEXLCXttenJwl9kGxOH3b98BTKNQiueAVRpEt5lGar07C/BasYu1sfrLlD/RGEyUVhZYG5taNWHzSjIIOlcyhBCU7aTgGNSAfJaGQk+4l403e0z8kbib9X2HFRikXLIszTqO7G7Sl40bla0reAmv7Yr+K7VnigvzjurxaKMYorOsQrrT/rZ+gfoZ6dyWtK5+CtUFol/kH3eYvlFsBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "ApiPipelineStack/test/MessagesAlertsApiStack/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "apiEndpoint9349E63C": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apiC8550315"
            },
            ".execute-api.us-east-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apiDeploymentStageprod896C8101"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store."
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}